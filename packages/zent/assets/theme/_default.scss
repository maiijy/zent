@import './old-default';
@import './variables/color';
@import './variables/text';

// sass-lint:disable no-duplicate-properties

@function get-value($content, $key) {
  $val: map-get($content, $key);

  @if $val {
    @return $val;
  } @else {
    @error '#{$content} doesnot has #{$key}';
  }
}

@function get-color-value($content, $status) {
  @return get-value(get-value($color-vars, $content), $status);
}

@function get-color-name($content, $status) {
  $name: map-get($brand-related, #{$content}-#{$status});

  @if $name {
    @return $name;
  } @else {
    @return #{$content}-#{$status};
  }
}

@function zent-color-var-rgb($content, $status) {
  $color: get-color-value($content, $status);

  @return var(--theme-#{get-color-name($content, $status)}, $color);
}

@function zent-color-var-rgba($content, $status) {
  $color: get-color-value($content, $status);
  $css-var: var(
    --theme-rgb-#{get-color-name($content, $status)},
    to-rgb($color)
  );

  // `unquote` is a workaround for node-sass misinterprets rgba as builtin function
  // https://github.com/sass/node-sass/issues/2251
  // dart-sass doesn't seem to have this issue.
  @return unquote('rgba(#{$css-var}, #{$opacity})');
}

@mixin zent-color($prop, $content, $status, $opacity: 1) {
  $color: get-color-value($content, $status);

  @if $opacity >= 1 {
    #{$prop}: $color;
    #{$prop}: zent-color-var-rgb($content, $status);
  } @else {
    #{$prop}: rgba($color, $opacity);
    #{$prop}: zent-color-var-rgba($content, $status);
  }
}

@function zent-font-size($content, $weight) {
  @return get-value(get-value($font-size-vars, $content), $weight);
}

@mixin zent-font($content, $weight) {
  $font-size: zent-font-size($content, $weight);

  @if $font-size > $break-size {
    font-size: $font-size;
    line-height: $line-height-1 * $font-size;
  } @else {
    font-size: $font-size;
    line-height: $line-height-2 * $font-size;
  }
}

@function zent-spacing($weight: 1) {
  @return nth($spacing, $weight);
}

@function zent-corner($weight: 2) {
  @return nth($border-radius, $weight);
}

@mixin zent-shadow($name) {
  @include theme-shadow($name);
}

@function zent-border($status: 1) {
  @return nth($border-width, $weight);
}
